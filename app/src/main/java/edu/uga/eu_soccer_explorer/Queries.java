package edu.uga.eu_soccer_explorer;



public final class Queries {

    final static String COUNTRIES_LEAGUES_TEAMS_ALL = "SELECT C.id as country_id, C.name as country_name, L.id as league_id, L.name as league_name, T.Id as team_id, team_long_name as team_name, team_short_name FROM Country as C, League as L, Team as T WHERE C.id IN (SELECT country_id FROM League WHERE Id = L.id) AND T.team_api_id IN (SELECT home_team_api_id FROM `Match` WHERE league_id = L.id)";

    final static String PLAYERS_BY_NAME = "SELECT player_name as name, birthday, height, weight, attacking_work_rate, defensive_work_rate, overall_rating, potential, crossing, finishing, heading_accuracy, short_passing, volleys,dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility,reactions, balance, shot_power, jumping, stamina, aggression, strength, long_shots, aggression, interceptions, positioning, vision, penalties FROM player, player_attributes WHERE player.player_name LIKE '%{0}%' AND player.player_api_id = player_attributes.player_api_id";

    final static String TEAMS_BY_NAME = "SELECT * FROM team, team_attributes WHERE team.team_long_name LIKE '%{0}%' AND team.team_api_id = team_attributes.team_api_id"; 
    

    final static String MATCHES_WITH_FILTER = "SELECT eu_soccer.match.id AS Match_id, locationCountry.name AS country_name, matchLeague.name AS League, eu_soccer.match.home_team_goal, eu_soccer.match.away_team_goal, eu_soccer.match.shoton AS shots_on_target, eu_soccer.match.shotoff AS shots_off_target, eu_soccer.match.possession, eu_soccer.match.foulcommit as fouls, (SELECT team.team_long_name FROM team WHERE eu_soccer.match.home_team_api_id = team.team_api_id) AS Home_team, (SELECT team.team_long_name FROM team WHERE eu_soccer.match.away_team_api_id = team.team_api_id) AS Away_team FROM eu_soccer.match , (SELECT team_api_id, team_long_name FROM team WHERE team_long_name COLLATE utf8mb4_general_ci = @TEAM1NAME OR team_short_name COLLATE utf8mb4_general_ci = @TEAM1NAME) AS team1, (SELECT team_api_id, team_long_name FROM team WHERE team_long_name COLLATE utf8mb4_general_ci = @TEAM2NAME OR team_short_name COLLATE utf8mb4_general_ci = @TEAM2NAME) AS team2, (SELECT country.name, country.id FROM country WHERE country.name = @COUNTRYNAME) AS locationCountry, (SELECT * FROM league WHERE league.name = @LEAGUENAME) AS matchLeague WHERE (eu_soccer.match.home_team_api_id = team1.team_api_id AND eu_soccer.match.away_team_api_id = team2.team_api_id) OR (eu_soccer.match.home_team_api_id = team2.team_api_id AND eu_soccer.match.away_team_api_id = team1.team_api_id) AND eu_soccer.match.country_id = locationCountry.id AND eu_soccer.match.date BETWEEN @DATE1 AND @DATE2 AND eu_soccer.match.league_id = matchLeague.id";


    final static String PREDICTION_QUERY = "SELECT CASE WHEN (Team_1_Win_Percent = Team_2_Win_Percent OR Team_1_AVG_Goals = Team_2_AVG_Goals) THEN \"Predicted Outcome: Draw\"" +"	WHEN (Team_1_Win_Percent > Team_2_Win_Percent AND Team_1_AVG_Goals > Team_2_AVG_Goals) THEN \"Team 1 victory\"	" +"	WHEN (Team_2_Win_Percent > Team_1_Win_Percent AND Team_2_AVG_Goals > Team_1_AVG_Goals) THEN \"Team 2 victory\"" +"    WHEN (Team_1_Win_Percent > Team_2_Win_Percent) THEN \"Team 1 victory\"" +"	WHEN (Team_1_Win_Percent < Team_2_Win_Percent) THEN \"Team 2 victory\"" +"    WHEN (Team_1_AVG_Goals > Team_2_AVG_Goals) THEN \"Team 1 victory\"" +"    WHEN (Team_1_AVG_Goals < Team_2_AVG_Goals) THEN \"Team 2 victory\"	" +"    ELSE \"Predicted Outcome: Draw\"" +"    END AS Predicted_Outcome" +"FROM" +"(SELECT ((T1_away.T1_away_wins + T1_home.T1_home_wins)/(T1_away.T1_away_total + T1_home.T1_home_total)*100) AS Team_1_Win_Percent," +"((T1_away.T1_away_goals + T1_home.T1_home_goals)/(T1_away.T1_away_total + T1_home.T1_home_total)) AS Team_1_AVG_Goals," +"((T2_away.T2_away_wins + T2_home.T2_home_wins)/(T2_away.T2_away_total + T2_home.T2_home_total)*100) AS Team_2_Win_Percent," +"((T2_away.T2_away_goals + T2_home.T2_home_goals)/(T2_away.T2_away_total + T2_home.T2_home_total)) AS Team_2_AVG_Goals" +"FROM " +"(SELECT COUNT(*) AS T1_away_wins, numGames.count AS T1_away_total, SUM(away_team_goal) AS T1_away_goals " +"FROM (SELECT * FROM eu_soccer.match AS matches, (SELECT team_api_id FROM team WHERE team_long_name = '{0}') AS team1id" +"	 WHERE matches.away_team_api_id = team1id.team_api_id) AS T1_away_games, (SELECT COUNT(*) AS count FROM eu_soccer.match AS matches, (SELECT team_api_id FROM team WHERE team_long_name = '{0}') AS team1id" +"	 WHERE matches.away_team_api_id = team1id.team_api_id) AS numGames" +"     WHERE away_team_goal > home_team_goal" +"     GROUP BY away_team_api_id) AS T1_away,     " +"(SELECT COUNT(*) AS T1_home_wins, numGames.count AS T1_home_total, SUM(home_team_goal) AS T1_home_goals" +"FROM (SELECT * FROM eu_soccer.match AS matches, (SELECT team_api_id FROM team WHERE team_long_name = '{0}') AS team1id" +"	 WHERE matches.home_team_api_id = team1id.team_api_id) AS T1_home_games, (SELECT COUNT(*) AS count FROM eu_soccer.match AS matches, (SELECT team_api_id FROM team WHERE team_long_name = '{0}') AS team1id" +"	 WHERE matches.home_team_api_id = team1id.team_api_id) AS numGames" +"     WHERE home_team_goal > away_team_goal" +"     GROUP BY home_team_api_id) AS T1_home,     " +"(SELECT COUNT(*) AS T2_away_wins, numGames.count AS T2_away_total, SUM(away_team_goal) AS T2_away_goals" +"FROM (SELECT * FROM eu_soccer.match AS matches, (SELECT team_api_id FROM team WHERE team_long_name = '{1}') AS team2id" +"	 WHERE matches.away_team_api_id = team2id.team_api_id) AS T2_away_games, (SELECT COUNT(*) AS count FROM eu_soccer.match AS matches, (SELECT team_api_id FROM team WHERE team_long_name = '{1}') AS team2id" +"	 WHERE matches.away_team_api_id = team2id.team_api_id) AS numGames" +"     WHERE away_team_goal > home_team_goal" +"     GROUP BY away_team_api_id) AS T2_away," +"(SELECT COUNT(*) AS T2_home_wins, numGames.count AS T2_home_total, SUM(home_team_goal) AS T2_home_goals" +"FROM (SELECT * FROM eu_soccer.match AS matches, (SELECT team_api_id FROM team WHERE team_long_name = '{1}') AS team2id" +"	 WHERE matches.home_team_api_id = team2id.team_api_id) AS T2_home_games, (SELECT COUNT(*) AS count FROM eu_soccer.match AS matches, (SELECT team_api_id FROM team WHERE team_long_name = '{1}') AS team2id" +"	 WHERE matches.home_team_api_id = team2id.team_api_id) AS numGames" +"     WHERE away_team_goal < home_team_goal" +"     GROUP BY home_team_api_id) AS T2_home" +") AS summaryStats";
}